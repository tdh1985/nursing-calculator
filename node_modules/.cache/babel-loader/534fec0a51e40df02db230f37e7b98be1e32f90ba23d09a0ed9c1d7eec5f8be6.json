{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const NursingCalculator=()=>{const[beds,setBeds]=useState(Array.from({length:11},(_,i)=>({id:i+1,ratio:'',status:'current',newRatio:'',moveToBed:'',moveNewRatio:'',admissionAfterMove:'',nurseAssigned:null})));const[nurseAssignments,setNurseAssignments]=useState([]);const[includeInCharge,setIncludeInCharge]=useState(true);const[includeWardClerk,setIncludeWardClerk]=useState(false);const[includeAM515,setIncludeAM515]=useState(false);const[includeCNE,setIncludeCNE]=useState(false);const[cneHours,setCneHours]=useState('');const[currentNursesAM,setCurrentNursesAM]=useState('');const[expectedNursesPM,setExpectedNursesPM]=useState(0);const[expectedNursesNight,setExpectedNursesNight]=useState(0);const[viewMode,setViewMode]=useState('combined');const parseRatio=ratioStr=>{if(!ratioStr||!ratioStr.includes(':'))return null;const parts=ratioStr.split(':');if(parts.length!==2)return null;const nurseCount=parseInt(parts[0]);const patientCount=parseInt(parts[1]);if(isNaN(nurseCount)||isNaN(patientCount)||nurseCount!==1)return null;return patientCount;};const calculateHoursFromRange=timeRange=>{if(!timeRange||!timeRange.includes('-'))return 0;const[start,end]=timeRange.split('-');if(start.length!==4||end.length!==4)return 0;const startHour=parseInt(start.substring(0,2));const startMin=parseInt(start.substring(2,4));const endHour=parseInt(end.substring(0,2));const endMin=parseInt(end.substring(2,4));if(isNaN(startHour)||isNaN(startMin)||isNaN(endHour)||isNaN(endMin))return 0;let hours=endHour-startHour;let minutes=endMin-startMin;if(minutes<0){hours-=1;minutes+=60;}if(hours<0){hours+=24;}return hours+minutes/60;};const calculateTotalHours=()=>{const amNurses=parseInt(currentNursesAM)||0;let totalHours=0;totalHours+=amNurses*8;totalHours+=expectedNursesPM*8;totalHours+=expectedNursesNight*10;if(includeWardClerk)totalHours+=7.5;if(includeAM515)totalHours+=8;if(includeCNE)totalHours+=calculateHoursFromRange(cneHours);return totalHours;};const calculateNurses=useCallback(()=>{const assignments=[];let nurseId=1;// First, handle bed moves\nconst bedMoveMap={};const newAdmissionsAfterMove={};beds.forEach(bed=>{if((bed.status==='bedMove'||bed.status==='bedMoveWithRatio')&&bed.moveToBed){const targetBed=parseInt(bed.moveToBed);if(targetBed>=1&&targetBed<=11){bedMoveMap[targetBed]={...bed,id:targetBed,ratio:bed.moveNewRatio||bed.newRatio||bed.ratio};// Check if there's a new admission coming to the vacated bed\nif(bed.admissionAfterMove){newAdmissionsAfterMove[bed.id]=bed.admissionAfterMove;}}}});const bedsWithRatios=beds.map(bed=>{// Check if another bed is moving to this position\nif(bedMoveMap[bed.id]){return{...bedMoveMap[bed.id],patientCount:parseRatio(bedMoveMap[bed.id].ratio),nurseAssigned:null};}// Check if this bed has a new admission after someone moved out\nif(newAdmissionsAfterMove[bed.id]){return{...bed,patientCount:parseRatio(newAdmissionsAfterMove[bed.id]),nurseAssigned:null};}// Handle different statuses\nif(bed.status==='turnover'&&bed.newRatio&&parseRatio(bed.newRatio)!==null){return{...bed,patientCount:parseRatio(bed.newRatio),nurseAssigned:null};}if(bed.status==='changeRatio'&&bed.newRatio&&parseRatio(bed.newRatio)!==null){return{...bed,patientCount:parseRatio(bed.newRatio),nurseAssigned:null};}if(bed.status==='bedMove'||bed.status==='bedMoveWithRatio'){return null;// This bed's patient has moved elsewhere\n}return{...bed,patientCount:parseRatio(bed.ratio),nurseAssigned:null};}).filter(bed=>bed!==null&&bed.patientCount!==null&&bed.status!=='discharge'&&bed.status!=='toWard');const groups={};// Group beds by their patient count\nbedsWithRatios.forEach(bed=>{const key=bed.patientCount.toString();if(!groups[key]){groups[key]=[];}groups[key].push(bed);});// Sort groups by patient count (1:1 first, then 1:2, etc.)\nconst sortedGroupKeys=Object.keys(groups).sort((a,b)=>parseInt(a)-parseInt(b));// Assign nurses to groups\nsortedGroupKeys.forEach(key=>{const patientCount=parseInt(key);const bedsInGroup=groups[key];if(patientCount===1){// 1:1 patients each get their own nurse\nbedsInGroup.forEach(bed=>{const nurse={id:nurseId++,beds:[bed]};bed.nurseAssigned=nurse.id;assignments.push(nurse);});}else{// For 1:2, 1:3, 1:4, etc., try to group beds together\nwhile(bedsInGroup.length>=patientCount){const nurse={id:nurseId++,beds:[]};for(let i=0;i<patientCount;i++){const bed=bedsInGroup.shift();bed.nurseAssigned=nurse.id;nurse.beds.push(bed);}assignments.push(nurse);}}});// Handle remaining beds that couldn't form complete groups\nconst remaining=[];Object.values(groups).forEach(group=>{remaining.push(...group);});// Try to optimally assign remaining beds\nremaining.sort((a,b)=>a.patientCount-b.patientCount);// Sort by workload (lower ratio first)\nremaining.forEach(bed=>{let assigned=false;// Try to find a nurse who can take this patient\nfor(let nurse of assignments){const currentLoad=nurse.beds.reduce((sum,b)=>sum+1/b.patientCount,0);const newLoad=currentLoad+1/bed.patientCount;// A nurse can handle up to 1.0 workload (e.g., one 1:1, or two 1:2s, or three 1:3s, etc.)\nif(newLoad<=1.0){nurse.beds.push(bed);bed.nurseAssigned=nurse.id;assigned=true;break;}}// If no existing nurse can take this patient, create a new nurse\nif(!assigned){const nurse={id:nurseId++,beds:[bed]};bed.nurseAssigned=nurse.id;assignments.push(nurse);}});const updatedBeds=beds.map(bed=>{const assignedBed=bedsWithRatios.find(b=>b.id===bed.id);return{...bed,nurseAssigned:assignedBed?assignedBed.nurseAssigned:null};});setBeds(updatedBeds);setNurseAssignments(assignments);const baseNurses=assignments.length;const totalWithInCharge=baseNurses+(includeInCharge?1:0);setExpectedNursesPM(totalWithInCharge);setExpectedNursesNight(totalWithInCharge);},[beds,includeInCharge]);const updateBedRatio=(bedId,ratio)=>{setBeds(beds.map(bed=>bed.id===bedId?{...bed,ratio}:bed));};const updateNewRatio=(bedId,newRatio)=>{setBeds(beds.map(bed=>bed.id===bedId?{...bed,newRatio}:bed));};const updateBedStatus=(bedId,status)=>{setBeds(beds.map(bed=>bed.id===bedId?{...bed,status,newRatio:status!=='turnover'&&status!=='changeRatio'?'':bed.newRatio,moveToBed:status!=='bedMove'&&status!=='bedMoveWithRatio'?'':bed.moveToBed,moveNewRatio:status!=='bedMoveWithRatio'?'':bed.moveNewRatio,admissionAfterMove:status!=='bedMove'&&status!=='bedMoveWithRatio'?'':bed.admissionAfterMove}:bed));};const updateMoveToBed=(bedId,moveToBed)=>{setBeds(beds.map(bed=>bed.id===bedId?{...bed,moveToBed}:bed));};const updateMoveNewRatio=(bedId,moveNewRatio)=>{setBeds(beds.map(bed=>bed.id===bedId?{...bed,moveNewRatio}:bed));};const updateAdmissionAfterMove=(bedId,admissionAfterMove)=>{setBeds(beds.map(bed=>bed.id===bedId?{...bed,admissionAfterMove}:bed));};const validateRatio=text=>{if(text==='')return true;// Allow formats like 1:1, 1:2, 1:3, 1:4, etc.\nconst pattern=/^1:[1-9]\\d*$/;return pattern.test(text)||/^[0-9:]*$/.test(text);};const validateTimeInput=text=>{return text===''||/^[0-9-]*$/.test(text);};const calculateAdmissionCapacity=(nurses,currentAssignments)=>{const totalNurses=nurses-(includeInCharge?1:0);if(totalNurses<=0)return['No capacity - no bedside nurses available'];const currentOccupiedBeds=beds.filter(bed=>bed.ratio&&parseRatio(bed.ratio)!==null&&bed.status!=='discharge'&&bed.status!=='toWard'&&bed.status!=='bedMove'&&bed.status!=='bedMoveWithRatio').length;const plannedDischarges=beds.filter(bed=>bed.ratio&&parseRatio(bed.ratio)!==null&&(bed.status==='discharge'||bed.status==='toWard')).length;const effectiveOccupiedBeds=currentOccupiedBeds;const availableBeds=11-effectiveOccupiedBeds;if(availableBeds<=0){return['No capacity - all beds occupied (after planned movements)'];}let usedCapacity=0;const activeAssignments=currentAssignments.map(nurse=>({...nurse,beds:nurse.beds.filter(bed=>{const actualBed=beds.find(b=>b.id===bed.id);return actualBed&&actualBed.status!=='discharge'&&actualBed.status!=='toWard'&&actualBed.status!=='bedMove'&&actualBed.status!=='bedMoveWithRatio';}).map(bed=>{const actualBed=beds.find(b=>b.id===bed.id);if(actualBed&&actualBed.status==='turnover'&&actualBed.newRatio){const newPatientCount=parseRatio(actualBed.newRatio);if(newPatientCount){return{...bed,patientCount:newPatientCount};}}return bed;})}));activeAssignments.forEach(nurse=>{if(nurse.beds&&nurse.beds.length>0){usedCapacity+=nurse.beds.reduce((sum,b)=>sum+1/b.patientCount,0);}});const remainingCapacity=totalNurses-usedCapacity;if(remainingCapacity<0.33){return['No capacity - all nurses at maximum workload'];}const capacityOptions=[];if(remainingCapacity>=1){const nursesFor1to1=Math.floor(remainingCapacity);const actual1to1=Math.min(nursesFor1to1,availableBeds);if(actual1to1>0){capacityOptions.push(`${actual1to1} × 1:1 patient${actual1to1>1?'s':''}`);}}if(remainingCapacity>=0.5){const nursesFor1to2=Math.floor(remainingCapacity/0.5);const actual1to2=Math.min(nursesFor1to2,availableBeds);if(actual1to2>0){capacityOptions.push(`${actual1to2} × 1:2 patient${actual1to2>1?'s':''}`);}}if(remainingCapacity>=0.33){const nursesFor1to3=Math.floor(remainingCapacity/0.33);const actual1to3=Math.min(nursesFor1to3,availableBeds);if(actual1to3>0){capacityOptions.push(`${actual1to3} × 1:3 patient${actual1to3>1?'s':''}`);}}// Support for 1:4 and beyond\nif(remainingCapacity>=0.25){const nursesFor1to4=Math.floor(remainingCapacity/0.25);const actual1to4=Math.min(nursesFor1to4,availableBeds);if(actual1to4>0){capacityOptions.push(`${actual1to4} × 1:4 patient${actual1to4>1?'s':''}`);}}return capacityOptions.length>0?capacityOptions:['No capacity - all nurses at maximum workload'];};const bedDataString=beds.map(b=>`${b.ratio}:${b.status}:${b.newRatio}:${b.moveToBed}:${b.moveNewRatio}:${b.admissionAfterMove}`).join(',');useEffect(()=>{calculateNurses();},[bedDataString,includeInCharge,calculateNurses]);const amNurses=parseInt(currentNursesAM)||0;const totalHours=calculateTotalHours();const pmAdmissionCapacity=calculateAdmissionCapacity(expectedNursesPM,nurseAssignments);const nightAdmissionCapacity=calculateAdmissionCapacity(expectedNursesNight,nurseAssignments);// Current state calculations\nconst currentPatients=beds.filter(bed=>bed.ratio&&parseRatio(bed.ratio)!==null&&(bed.status==='current'||bed.status==='toWard')).length;const toWardPatients=beds.filter(bed=>bed.ratio&&parseRatio(bed.ratio)!==null&&bed.status==='toWard').length;// Expected state calculations\nconst comingInPatients=beds.filter(bed=>bed.ratio&&parseRatio(bed.ratio)!==null&&bed.status==='comingIn').length;const dischargePatients=beds.filter(bed=>bed.ratio&&parseRatio(bed.ratio)!==null&&bed.status==='discharge').length;const turnoverBeds=beds.filter(bed=>bed.ratio&&parseRatio(bed.ratio)!==null&&bed.status==='turnover').length;const totalPatients=beds.filter(bed=>bed.ratio&&parseRatio(bed.ratio)!==null).length;const remainingAfterWard=currentPatients-toWardPatients;const expectedFinalPatients=remainingAfterWard+comingInPatients+turnoverBeds;return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-zinc-950 text-zinc-100\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-gradient-to-r from-zinc-900 via-zinc-800 to-zinc-900 border-b border-zinc-800\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-7xl mx-auto px-6 py-8\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-5xl font-black text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-violet-400 text-center tracking-tight\",children:\"Nursing Calculator\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-center text-zinc-400 mt-2 text-sm uppercase tracking-wider\",children:\"Advanced Shift Planning System\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-7xl mx-auto p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-zinc-900 border border-zinc-800 rounded-2xl p-8 mb-6 relative overflow-hidden\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute top-0 right-0 w-64 h-64 bg-gradient-to-br from-cyan-500/10 to-transparent rounded-full blur-3xl\"}),/*#__PURE__*/_jsxs(\"h2\",{className:\"text-2xl font-bold mb-6 text-zinc-100 flex items-center relative z-10\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"w-3 h-3 bg-cyan-400 rounded-full mr-3 animate-pulse\"}),\"Morning Shift\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-6 relative z-10\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-zinc-800/50 backdrop-blur border border-zinc-700 p-6 rounded-xl flex-1 max-w-sm\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"text-xs text-zinc-400 font-medium block mb-3 uppercase tracking-wider\",children:\"AM Nurses (8hr)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:currentNursesAM,onChange:e=>setCurrentNursesAM(e.target.value),className:\"w-full bg-zinc-900/50 border border-zinc-700 rounded-lg px-6 py-4 text-3xl font-bold text-cyan-400 focus:border-cyan-500 focus:outline-none focus:ring-2 focus:ring-cyan-500/20 transition-all\",placeholder:\"0\"})]}),amNurses>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-br from-cyan-500/10 to-violet-500/10 border border-cyan-500/20 p-6 rounded-xl\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-zinc-400 text-xs uppercase tracking-wider\",children:\"Total Hours\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-4xl font-black text-cyan-400\",children:amNurses*8})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-zinc-900 border border-zinc-800 rounded-2xl p-6 mb-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-center gap-4\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-zinc-400 text-sm font-medium uppercase tracking-wider\",children:\"View Mode\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-zinc-800 rounded-full p-1 flex\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setViewMode('combined'),className:`px-6 py-2 rounded-full text-sm font-medium transition-all ${viewMode==='combined'?'bg-gradient-to-r from-cyan-500 to-violet-500 text-white shadow-lg shadow-cyan-500/25':'text-zinc-400 hover:text-zinc-100'}`,children:\"Combined\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setViewMode('split'),className:`px-6 py-2 rounded-full text-sm font-medium transition-all ${viewMode==='split'?'bg-gradient-to-r from-cyan-500 to-violet-500 text-white shadow-lg shadow-violet-500/25':'text-zinc-400 hover:text-zinc-100'}`,children:\"Current \\u2192 Expected\"})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-zinc-900 border border-zinc-800 rounded-2xl p-8 mb-6 relative overflow-hidden\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute bottom-0 left-0 w-96 h-96 bg-gradient-to-tr from-violet-500/10 to-transparent rounded-full blur-3xl\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold mb-6 text-zinc-100 relative z-10\",children:viewMode==='split'?'Bed Status & Changes':'PM & Night Planning'}),viewMode==='split'&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-8 grid md:grid-cols-2 gap-4 relative z-10\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-br from-blue-500/10 to-transparent border border-blue-500/20 p-6 rounded-xl\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-bold text-blue-400 mb-2 text-sm uppercase tracking-wider\",children:\"Current\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-4xl font-black text-blue-400\",children:currentPatients}),/*#__PURE__*/_jsx(\"p\",{className:\"text-zinc-400 text-sm\",children:\"patients now\"}),toWardPatients>0&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-orange-400 text-sm mt-2\",children:[\"-\",toWardPatients,\" to ward\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-br from-green-500/10 to-transparent border border-green-500/20 p-6 rounded-xl\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-bold text-green-400 mb-2 text-sm uppercase tracking-wider\",children:\"Expected\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-4xl font-black text-green-400\",children:expectedFinalPatients}),/*#__PURE__*/_jsx(\"p\",{className:\"text-zinc-400 text-sm\",children:\"final count\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-violet-400 text-sm mt-2 font-medium\",children:[expectedNursesPM,\" nurses needed\"]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid gap-3 md:grid-cols-2 relative z-10\",children:beds.map(bed=>/*#__PURE__*/_jsx(\"div\",{className:\"bg-zinc-800/50 backdrop-blur border border-zinc-700 p-4 rounded-xl hover:border-zinc-600 transition-all\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col gap-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-3\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"bg-zinc-900 border border-zinc-700 px-3 py-1.5 rounded-lg font-bold text-zinc-400 text-sm\",children:[\"B\",bed.id]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"flex-1 bg-zinc-900/50 border border-zinc-700 rounded-lg px-3 py-1.5 text-zinc-100 focus:border-cyan-500 focus:outline-none focus:ring-2 focus:ring-cyan-500/20 transition-all text-sm\",value:bed.ratio,onChange:e=>{if(validateRatio(e.target.value)){updateBedRatio(bed.id,e.target.value);}},placeholder:\"1:2\"}),bed.ratio&&/*#__PURE__*/_jsxs(\"select\",{value:bed.status,onChange:e=>updateBedStatus(bed.id,e.target.value),className:`bg-zinc-900/50 border rounded-lg px-2 py-1.5 text-xs font-medium transition-all ${bed.status==='discharge'?'border-red-500/50 text-red-400':bed.status==='turnover'?'border-purple-500/50 text-purple-400':bed.status==='toWard'?'border-orange-500/50 text-orange-400':bed.status==='comingIn'?'border-green-500/50 text-green-400':bed.status==='changeRatio'?'border-blue-500/50 text-blue-400':bed.status==='bedMove'?'border-indigo-500/50 text-indigo-400':bed.status==='bedMoveWithRatio'?'border-pink-500/50 text-pink-400':'border-zinc-700 text-zinc-400'}`,children:[/*#__PURE__*/_jsx(\"option\",{value:\"current\",children:\"Staying\"}),/*#__PURE__*/_jsx(\"option\",{value:\"changeRatio\",children:\"Ratio Change\"}),/*#__PURE__*/_jsx(\"option\",{value:\"bedMove\",children:\"Moving Beds\"}),/*#__PURE__*/_jsx(\"option\",{value:\"bedMoveWithRatio\",children:\"Move + Ratio\"}),/*#__PURE__*/_jsx(\"option\",{value:\"toWard\",children:\"To Ward\"}),/*#__PURE__*/_jsx(\"option\",{value:\"comingIn\",children:\"New Admission\"}),/*#__PURE__*/_jsx(\"option\",{value:\"discharge\",children:\"Discharge\"}),/*#__PURE__*/_jsx(\"option\",{value:\"turnover\",children:\"Turnover\"})]}),bed.nurseAssigned&&bed.status!=='toWard'&&bed.status!=='discharge'&&bed.status!=='bedMove'&&bed.status!=='bedMoveWithRatio'&&/*#__PURE__*/_jsxs(\"span\",{className:\"px-3 py-1 rounded-full text-xs font-bold bg-gradient-to-r text-zinc-900\",style:{backgroundImage:`linear-gradient(135deg, hsl(${bed.nurseAssigned*60}, 70%, 60%), hsl(${bed.nurseAssigned*60+30}, 70%, 50%))`},children:[\"N\",bed.nurseAssigned]})]}),bed.status==='turnover'&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 ml-12\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-purple-400\",children:\"New:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"flex-1 bg-zinc-900/50 border border-purple-500/30 rounded-lg px-2 py-1 text-xs text-zinc-100 focus:border-purple-500 focus:outline-none\",value:bed.newRatio,onChange:e=>{if(validateRatio(e.target.value)){updateNewRatio(bed.id,e.target.value);}},placeholder:\"1:2\"})]}),bed.status==='changeRatio'&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 ml-12\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-blue-400\",children:\"New:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"flex-1 bg-zinc-900/50 border border-blue-500/30 rounded-lg px-2 py-1 text-xs text-zinc-100 focus:border-blue-500 focus:outline-none\",value:bed.newRatio,onChange:e=>{if(validateRatio(e.target.value)){updateNewRatio(bed.id,e.target.value);}},placeholder:\"1:1\"})]}),bed.status==='bedMove'&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col gap-2 ml-12\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-indigo-400\",children:\"To:\"}),/*#__PURE__*/_jsxs(\"select\",{value:bed.moveToBed,onChange:e=>updateMoveToBed(bed.id,e.target.value),className:\"bg-zinc-900/50 border border-indigo-500/30 rounded-lg px-2 py-1 text-xs text-zinc-100\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select...\"}),Array.from({length:11},(_,i)=>i+1).filter(num=>num!==bed.id&&!beds.find(b=>b.id!==bed.id&&b.moveToBed===String(num))).map(num=>/*#__PURE__*/_jsxs(\"option\",{value:num,children:[\"Bed \",num]},num))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-indigo-400\",children:\"New:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"flex-1 bg-zinc-900/50 border border-indigo-500/30 rounded-lg px-2 py-1 text-xs text-zinc-100\",value:bed.admissionAfterMove,onChange:e=>{if(validateRatio(e.target.value)){updateAdmissionAfterMove(bed.id,e.target.value);}},placeholder:\"Optional\"})]})]}),bed.status==='bedMoveWithRatio'&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col gap-2 ml-12\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-pink-400\",children:\"To:\"}),/*#__PURE__*/_jsxs(\"select\",{value:bed.moveToBed,onChange:e=>updateMoveToBed(bed.id,e.target.value),className:\"bg-zinc-900/50 border border-pink-500/30 rounded-lg px-2 py-1 text-xs text-zinc-100\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select...\"}),Array.from({length:11},(_,i)=>i+1).filter(num=>num!==bed.id&&!beds.find(b=>b.id!==bed.id&&b.moveToBed===String(num))).map(num=>/*#__PURE__*/_jsxs(\"option\",{value:num,children:[\"Bed \",num]},num))]}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-pink-400\",children:\"@\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"w-16 bg-zinc-900/50 border border-pink-500/30 rounded-lg px-2 py-1 text-xs text-zinc-100\",value:bed.moveNewRatio,onChange:e=>{if(validateRatio(e.target.value)){updateMoveNewRatio(bed.id,e.target.value);}},placeholder:\"1:1\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-pink-400\",children:\"New:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"flex-1 bg-zinc-900/50 border border-pink-500/30 rounded-lg px-2 py-1 text-xs text-zinc-100\",value:bed.admissionAfterMove,onChange:e=>{if(validateRatio(e.target.value)){updateAdmissionAfterMove(bed.id,e.target.value);}},placeholder:\"Optional\"})]})]})]})},bed.id))}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-6 bg-zinc-800/30 border border-zinc-700 p-4 rounded-xl relative z-10\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-wrap gap-2 items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-xs font-bold text-zinc-500 uppercase tracking-wider mr-3\",children:\"Status\"}),beds.map(bed=>{const isOccupied=bed.ratio&&parseRatio(bed.ratio)!==null;const isDischarged=bed.status==='discharge';const isToWard=bed.status==='toWard';const isAdmission=bed.status==='comingIn';const isTurnover=bed.status==='turnover';const isChangeRatio=bed.status==='changeRatio';const isBedMove=bed.status==='bedMove';const isBedMoveWithRatio=bed.status==='bedMoveWithRatio';return/*#__PURE__*/_jsx(\"div\",{className:`w-10 h-10 rounded-lg flex items-center justify-center text-xs font-bold transition-all border ${!isOccupied?'bg-zinc-900 border-zinc-700 text-zinc-600':isDischarged?'bg-red-500/20 border-red-500/50 text-red-400':isToWard?'bg-orange-500/20 border-orange-500/50 text-orange-400':isTurnover?'bg-purple-500/20 border-purple-500/50 text-purple-400':isAdmission?'bg-green-500/20 border-green-500/50 text-green-400':isChangeRatio?'bg-blue-500/20 border-blue-500/50 text-blue-400':isBedMove?'bg-indigo-500/20 border-indigo-500/50 text-indigo-400':isBedMoveWithRatio?'bg-pink-500/20 border-pink-500/50 text-pink-400':'bg-cyan-500/20 border-cyan-500/50 text-cyan-400'}`,title:!isOccupied?`Bed ${bed.id}: Empty`:`Bed ${bed.id}: ${bed.ratio}${isDischarged?' (Discharge)':isToWard?' (To Ward)':isTurnover?` (Turnover → ${bed.newRatio||'?'})`:isAdmission?' (New Admission)':isChangeRatio?` (${bed.ratio} → ${bed.newRatio||'?'})`:isBedMove?` (→ Bed ${bed.moveToBed||'?'}${bed.admissionAfterMove?', +new':''})`:isBedMoveWithRatio?` (→ Bed ${bed.moveToBed||'?'} @ ${bed.moveNewRatio||'?'}${bed.admissionAfterMove?', +new':''})`:''}`,children:bed.id},bed.id);})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-zinc-900 border border-zinc-800 rounded-2xl p-8 mb-6\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"text-2xl font-bold mb-6 text-zinc-100 flex items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"w-3 h-3 bg-violet-400 rounded-full mr-3\"}),\"Additional Staff\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-3\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center gap-4 p-4 bg-zinc-800/30 border border-zinc-700 rounded-xl hover:border-zinc-600 transition-all cursor-pointer\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:includeInCharge,onChange:e=>setIncludeInCharge(e.target.checked),className:\"w-5 h-5 text-cyan-500 bg-zinc-800 border-zinc-600 rounded focus:ring-cyan-500\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-zinc-300\",children:\"In-Charge Nurse\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-zinc-500 ml-auto\",children:\"+1 nurse PM/Night\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center gap-4 p-4 bg-zinc-800/30 border border-zinc-700 rounded-xl hover:border-zinc-600 transition-all cursor-pointer\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:includeWardClerk,onChange:e=>setIncludeWardClerk(e.target.checked),className:\"w-5 h-5 text-cyan-500 bg-zinc-800 border-zinc-600 rounded focus:ring-cyan-500\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-zinc-300\",children:\"Ward Clerk\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-zinc-500 ml-auto\",children:\"+7.5 hours\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center gap-4 p-4 bg-zinc-800/30 border border-zinc-700 rounded-xl hover:border-zinc-600 transition-all cursor-pointer\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:includeAM515,onChange:e=>setIncludeAM515(e.target.checked),className:\"w-5 h-5 text-cyan-500 bg-zinc-800 border-zinc-600 rounded focus:ring-cyan-500\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-zinc-300\",children:\"AM 515\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-zinc-500 ml-auto\",children:\"+8 hours\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-4 p-4 bg-zinc-800/30 border border-zinc-700 rounded-xl\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center gap-4 cursor-pointer\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:includeCNE,onChange:e=>setIncludeCNE(e.target.checked),className:\"w-5 h-5 text-cyan-500 bg-zinc-800 border-zinc-600 rounded focus:ring-cyan-500\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-zinc-300\",children:\"CNE\"})]}),includeCNE&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:cneHours,onChange:e=>{if(validateTimeInput(e.target.value)){setCneHours(e.target.value);}},placeholder:\"1100-2100\",className:\"bg-zinc-900/50 border border-zinc-700 rounded-lg px-3 py-2 text-sm text-zinc-100 focus:border-cyan-500 focus:outline-none ml-auto\"}),cneHours&&calculateHoursFromRange(cneHours)>0&&/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs text-zinc-500\",children:[calculateHoursFromRange(cneHours).toFixed(1),\"h\"]})]})]})]})]}),(amNurses>0||expectedNursesPM>0||totalPatients>0)&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-zinc-900 border border-zinc-800 rounded-2xl p-8 mb-6 relative overflow-hidden\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute top-0 right-0 w-96 h-96 bg-gradient-to-bl from-cyan-500/5 to-transparent rounded-full blur-3xl\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold mb-6 text-zinc-100 relative z-10\",children:\"24-Hour Summary\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid md:grid-cols-3 gap-4 mb-8 relative z-10\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-br from-blue-500/10 to-transparent border border-blue-500/20 p-6 rounded-xl\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"font-bold text-blue-400 mb-3 text-sm uppercase tracking-wider flex items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"w-2 h-2 bg-blue-400 rounded-full mr-2\"}),\"AM Shift\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-4xl font-black text-blue-400\",children:amNurses}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-zinc-400 mt-1\",children:[\"\\xD7 8h = \",amNurses*8,\"h\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-br from-orange-500/10 to-transparent border border-orange-500/20 p-6 rounded-xl\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"font-bold text-orange-400 mb-3 text-sm uppercase tracking-wider flex items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"w-2 h-2 bg-orange-400 rounded-full mr-2\"}),\"PM Shift\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-4xl font-black text-orange-400\",children:expectedNursesPM}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-zinc-400 mt-1\",children:[\"\\xD7 8h = \",expectedNursesPM*8,\"h\"]}),includeInCharge&&/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-zinc-500 mt-1\",children:\"(inc. in-charge)\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-br from-purple-500/10 to-transparent border border-purple-500/20 p-6 rounded-xl\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"font-bold text-purple-400 mb-3 text-sm uppercase tracking-wider flex items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"w-2 h-2 bg-purple-400 rounded-full mr-2\"}),\"Night Shift\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-4xl font-black text-purple-400\",children:expectedNursesNight}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-zinc-400 mt-1\",children:[\"\\xD7 10h = \",expectedNursesNight*10,\"h\"]}),includeInCharge&&/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-zinc-500 mt-1\",children:\"(inc. in-charge)\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-r from-cyan-500/10 to-violet-500/10 border border-cyan-500/20 p-6 rounded-xl relative z-10\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-bold mb-4 text-zinc-100 text-lg\",children:\"Total Requirement\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-baseline\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-zinc-400\",children:\"24-hour total:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-5xl font-black bg-gradient-to-r from-cyan-400 to-violet-400 bg-clip-text text-transparent\",children:[totalHours.toFixed(1),\"h\"]})]})]})]}),nurseAssignments.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-zinc-900 border border-zinc-800 rounded-2xl p-8\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold mb-6 text-zinc-100\",children:\"PM & Night Assignments\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\",children:[nurseAssignments.map(nurse=>{const workload=nurse.beds.reduce((sum,bed)=>sum+1/bed.patientCount,0);return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-zinc-800/50 backdrop-blur border border-zinc-700 p-5 rounded-xl hover:border-zinc-600 transition-all\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-4\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"font-bold text-lg text-zinc-100\",children:[\"Nurse \",nurse.id]}),/*#__PURE__*/_jsxs(\"span\",{className:`px-3 py-1 rounded-full text-xs font-bold ${workload>=0.9?'bg-red-500/20 text-red-400 border border-red-500/50':workload>=0.7?'bg-yellow-500/20 text-yellow-400 border border-yellow-500/50':'bg-green-500/20 text-green-400 border border-green-500/50'}`,children:[(workload*100).toFixed(0),\"%\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2\",children:nurse.beds.map(bed=>{const actualBed=beds.find(b=>b.id===bed.id);const displayRatio=(actualBed===null||actualBed===void 0?void 0:actualBed.status)==='turnover'&&actualBed.newRatio?parseRatio(actualBed.newRatio):bed.patientCount;return/*#__PURE__*/_jsxs(\"p\",{className:\"text-zinc-400 text-sm flex items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"w-1.5 h-1.5 bg-cyan-400 rounded-full mr-2\"}),\"Bed \",bed.id,/*#__PURE__*/_jsxs(\"span\",{className:\"text-zinc-500 ml-2\",children:[\"1:\",displayRatio,(actualBed===null||actualBed===void 0?void 0:actualBed.status)==='turnover'&&' [new]',(actualBed===null||actualBed===void 0?void 0:actualBed.status)==='comingIn'&&' [adm]']})]},bed.id);})})]},nurse.id);}),includeInCharge&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-br from-violet-500/10 to-transparent border border-violet-500/20 p-5 rounded-xl\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-bold text-lg text-violet-400\",children:\"In-Charge\"}),/*#__PURE__*/_jsx(\"span\",{className:\"px-3 py-1 rounded-full text-xs font-bold bg-violet-500/20 text-violet-400 border border-violet-500/50\",children:\"Lead\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2 text-violet-400/80 text-sm\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"w-1.5 h-1.5 bg-violet-400 rounded-full mr-2\"}),\"Supervision\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"w-1.5 h-1.5 bg-violet-400 rounded-full mr-2\"}),\"Coordination\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"w-1.5 h-1.5 bg-violet-400 rounded-full mr-2\"}),\"Emergency\"]})]})]})]})]})]})]});};export default NursingCalculator;","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","NursingCalculator","beds","setBeds","Array","from","length","_","i","id","ratio","status","newRatio","moveToBed","moveNewRatio","admissionAfterMove","nurseAssigned","nurseAssignments","setNurseAssignments","includeInCharge","setIncludeInCharge","includeWardClerk","setIncludeWardClerk","includeAM515","setIncludeAM515","includeCNE","setIncludeCNE","cneHours","setCneHours","currentNursesAM","setCurrentNursesAM","expectedNursesPM","setExpectedNursesPM","expectedNursesNight","setExpectedNursesNight","viewMode","setViewMode","parseRatio","ratioStr","includes","parts","split","nurseCount","parseInt","patientCount","isNaN","calculateHoursFromRange","timeRange","start","end","startHour","substring","startMin","endHour","endMin","hours","minutes","calculateTotalHours","amNurses","totalHours","calculateNurses","assignments","nurseId","bedMoveMap","newAdmissionsAfterMove","forEach","bed","targetBed","bedsWithRatios","map","filter","groups","key","toString","push","sortedGroupKeys","Object","keys","sort","a","b","bedsInGroup","nurse","shift","remaining","values","group","assigned","currentLoad","reduce","sum","newLoad","updatedBeds","assignedBed","find","baseNurses","totalWithInCharge","updateBedRatio","bedId","updateNewRatio","updateBedStatus","updateMoveToBed","updateMoveNewRatio","updateAdmissionAfterMove","validateRatio","text","pattern","test","validateTimeInput","calculateAdmissionCapacity","nurses","currentAssignments","totalNurses","currentOccupiedBeds","plannedDischarges","effectiveOccupiedBeds","availableBeds","usedCapacity","activeAssignments","actualBed","newPatientCount","remainingCapacity","capacityOptions","nursesFor1to1","Math","floor","actual1to1","min","nursesFor1to2","actual1to2","nursesFor1to3","actual1to3","nursesFor1to4","actual1to4","bedDataString","join","pmAdmissionCapacity","nightAdmissionCapacity","currentPatients","toWardPatients","comingInPatients","dischargePatients","turnoverBeds","totalPatients","remainingAfterWard","expectedFinalPatients","className","children","type","value","onChange","e","target","placeholder","onClick","style","backgroundImage","num","String","isOccupied","isDischarged","isToWard","isAdmission","isTurnover","isChangeRatio","isBedMove","isBedMoveWithRatio","title","checked","toFixed","workload","displayRatio"],"sources":["/home/tim_d/nursing-calculator/src/NursingCalculator.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nconst NursingCalculator = () => {\n  const [beds, setBeds] = useState(\n    Array.from({ length: 11 }, (_, i) => ({\n      id: i + 1,\n      ratio: '',\n      status: 'current',\n      newRatio: '',\n      moveToBed: '',\n      moveNewRatio: '',\n      admissionAfterMove: '',\n      nurseAssigned: null\n    }))\n  );\n  \n  const [nurseAssignments, setNurseAssignments] = useState([]);\n  const [includeInCharge, setIncludeInCharge] = useState(true);\n  const [includeWardClerk, setIncludeWardClerk] = useState(false);\n  const [includeAM515, setIncludeAM515] = useState(false);\n  const [includeCNE, setIncludeCNE] = useState(false);\n  const [cneHours, setCneHours] = useState('');\n  const [currentNursesAM, setCurrentNursesAM] = useState('');\n  const [expectedNursesPM, setExpectedNursesPM] = useState(0);\n  const [expectedNursesNight, setExpectedNursesNight] = useState(0);\n  const [viewMode, setViewMode] = useState('combined');\n\n  const parseRatio = (ratioStr) => {\n    if (!ratioStr || !ratioStr.includes(':')) return null;\n    const parts = ratioStr.split(':');\n    if (parts.length !== 2) return null;\n    const nurseCount = parseInt(parts[0]);\n    const patientCount = parseInt(parts[1]);\n    if (isNaN(nurseCount) || isNaN(patientCount) || nurseCount !== 1) return null;\n    return patientCount;\n  };\n\n  const calculateHoursFromRange = (timeRange) => {\n    if (!timeRange || !timeRange.includes('-')) return 0;\n    const [start, end] = timeRange.split('-');\n    if (start.length !== 4 || end.length !== 4) return 0;\n    \n    const startHour = parseInt(start.substring(0, 2));\n    const startMin = parseInt(start.substring(2, 4));\n    const endHour = parseInt(end.substring(0, 2));\n    const endMin = parseInt(end.substring(2, 4));\n    \n    if (isNaN(startHour) || isNaN(startMin) || isNaN(endHour) || isNaN(endMin)) return 0;\n    \n    let hours = endHour - startHour;\n    let minutes = endMin - startMin;\n    \n    if (minutes < 0) {\n      hours -= 1;\n      minutes += 60;\n    }\n    \n    if (hours < 0) {\n      hours += 24;\n    }\n    \n    return hours + (minutes / 60);\n  };\n\n  const calculateTotalHours = () => {\n    const amNurses = parseInt(currentNursesAM) || 0;\n    let totalHours = 0;\n    \n    totalHours += amNurses * 8;\n    totalHours += expectedNursesPM * 8;\n    totalHours += expectedNursesNight * 10;\n    \n    if (includeWardClerk) totalHours += 7.5;\n    if (includeAM515) totalHours += 8;\n    if (includeCNE) totalHours += calculateHoursFromRange(cneHours);\n    \n    return totalHours;\n  };\n\n  const calculateNurses = useCallback(() => {\n    const assignments = [];\n    let nurseId = 1;\n    \n    // First, handle bed moves\n    const bedMoveMap = {};\n    const newAdmissionsAfterMove = {};\n    \n    beds.forEach(bed => {\n      if ((bed.status === 'bedMove' || bed.status === 'bedMoveWithRatio') && bed.moveToBed) {\n        const targetBed = parseInt(bed.moveToBed);\n        if (targetBed >= 1 && targetBed <= 11) {\n          bedMoveMap[targetBed] = {\n            ...bed,\n            id: targetBed,\n            ratio: bed.moveNewRatio || bed.newRatio || bed.ratio\n          };\n          \n          // Check if there's a new admission coming to the vacated bed\n          if (bed.admissionAfterMove) {\n            newAdmissionsAfterMove[bed.id] = bed.admissionAfterMove;\n          }\n        }\n      }\n    });\n    \n    const bedsWithRatios = beds.map(bed => {\n      // Check if another bed is moving to this position\n      if (bedMoveMap[bed.id]) {\n        return {\n          ...bedMoveMap[bed.id],\n          patientCount: parseRatio(bedMoveMap[bed.id].ratio),\n          nurseAssigned: null\n        };\n      }\n      \n      // Check if this bed has a new admission after someone moved out\n      if (newAdmissionsAfterMove[bed.id]) {\n        return {\n          ...bed,\n          patientCount: parseRatio(newAdmissionsAfterMove[bed.id]),\n          nurseAssigned: null\n        };\n      }\n      \n      // Handle different statuses\n      if (bed.status === 'turnover' && bed.newRatio && parseRatio(bed.newRatio) !== null) {\n        return {\n          ...bed,\n          patientCount: parseRatio(bed.newRatio),\n          nurseAssigned: null\n        };\n      }\n      if (bed.status === 'changeRatio' && bed.newRatio && parseRatio(bed.newRatio) !== null) {\n        return {\n          ...bed,\n          patientCount: parseRatio(bed.newRatio),\n          nurseAssigned: null\n        };\n      }\n      if (bed.status === 'bedMove' || bed.status === 'bedMoveWithRatio') {\n        return null; // This bed's patient has moved elsewhere\n      }\n      return {\n        ...bed,\n        patientCount: parseRatio(bed.ratio),\n        nurseAssigned: null\n      };\n    }).filter(bed => bed !== null && bed.patientCount !== null && bed.status !== 'discharge' && bed.status !== 'toWard');\n\n    const groups = {};\n    \n    // Group beds by their patient count\n    bedsWithRatios.forEach(bed => {\n      const key = bed.patientCount.toString();\n      if (!groups[key]) {\n        groups[key] = [];\n      }\n      groups[key].push(bed);\n    });\n\n    // Sort groups by patient count (1:1 first, then 1:2, etc.)\n    const sortedGroupKeys = Object.keys(groups).sort((a, b) => parseInt(a) - parseInt(b));\n\n    // Assign nurses to groups\n    sortedGroupKeys.forEach(key => {\n      const patientCount = parseInt(key);\n      const bedsInGroup = groups[key];\n      \n      if (patientCount === 1) {\n        // 1:1 patients each get their own nurse\n        bedsInGroup.forEach(bed => {\n          const nurse = {\n            id: nurseId++,\n            beds: [bed]\n          };\n          bed.nurseAssigned = nurse.id;\n          assignments.push(nurse);\n        });\n      } else {\n        // For 1:2, 1:3, 1:4, etc., try to group beds together\n        while (bedsInGroup.length >= patientCount) {\n          const nurse = {\n            id: nurseId++,\n            beds: []\n          };\n          for (let i = 0; i < patientCount; i++) {\n            const bed = bedsInGroup.shift();\n            bed.nurseAssigned = nurse.id;\n            nurse.beds.push(bed);\n          }\n          assignments.push(nurse);\n        }\n      }\n    });\n\n    // Handle remaining beds that couldn't form complete groups\n    const remaining = [];\n    Object.values(groups).forEach(group => {\n      remaining.push(...group);\n    });\n\n    // Try to optimally assign remaining beds\n    remaining.sort((a, b) => a.patientCount - b.patientCount); // Sort by workload (lower ratio first)\n    \n    remaining.forEach(bed => {\n      let assigned = false;\n      \n      // Try to find a nurse who can take this patient\n      for (let nurse of assignments) {\n        const currentLoad = nurse.beds.reduce((sum, b) => sum + (1 / b.patientCount), 0);\n        const newLoad = currentLoad + (1 / bed.patientCount);\n        \n        // A nurse can handle up to 1.0 workload (e.g., one 1:1, or two 1:2s, or three 1:3s, etc.)\n        if (newLoad <= 1.0) {\n          nurse.beds.push(bed);\n          bed.nurseAssigned = nurse.id;\n          assigned = true;\n          break;\n        }\n      }\n      \n      // If no existing nurse can take this patient, create a new nurse\n      if (!assigned) {\n        const nurse = {\n          id: nurseId++,\n          beds: [bed]\n        };\n        bed.nurseAssigned = nurse.id;\n        assignments.push(nurse);\n      }\n    });\n\n    const updatedBeds = beds.map(bed => {\n      const assignedBed = bedsWithRatios.find(b => b.id === bed.id);\n      return {\n        ...bed,\n        nurseAssigned: assignedBed ? assignedBed.nurseAssigned : null\n      };\n    });\n\n    setBeds(updatedBeds);\n    setNurseAssignments(assignments);\n    \n    const baseNurses = assignments.length;\n    const totalWithInCharge = baseNurses + (includeInCharge ? 1 : 0);\n    setExpectedNursesPM(totalWithInCharge);\n    setExpectedNursesNight(totalWithInCharge);\n  }, [beds, includeInCharge]);\n\n  const updateBedRatio = (bedId, ratio) => {\n    setBeds(beds.map(bed => \n      bed.id === bedId ? { ...bed, ratio } : bed\n    ));\n  };\n\n  const updateNewRatio = (bedId, newRatio) => {\n    setBeds(beds.map(bed => \n      bed.id === bedId ? { ...bed, newRatio } : bed\n    ));\n  };\n\n  const updateBedStatus = (bedId, status) => {\n    setBeds(beds.map(bed => \n      bed.id === bedId ? { \n        ...bed, \n        status, \n        newRatio: (status !== 'turnover' && status !== 'changeRatio') ? '' : bed.newRatio,\n        moveToBed: (status !== 'bedMove' && status !== 'bedMoveWithRatio') ? '' : bed.moveToBed,\n        moveNewRatio: status !== 'bedMoveWithRatio' ? '' : bed.moveNewRatio,\n        admissionAfterMove: (status !== 'bedMove' && status !== 'bedMoveWithRatio') ? '' : bed.admissionAfterMove\n      } : bed\n    ));\n  };\n\n  const updateMoveToBed = (bedId, moveToBed) => {\n    setBeds(beds.map(bed => \n      bed.id === bedId ? { ...bed, moveToBed } : bed\n    ));\n  };\n\n  const updateMoveNewRatio = (bedId, moveNewRatio) => {\n    setBeds(beds.map(bed => \n      bed.id === bedId ? { ...bed, moveNewRatio } : bed\n    ));\n  };\n\n  const updateAdmissionAfterMove = (bedId, admissionAfterMove) => {\n    setBeds(beds.map(bed => \n      bed.id === bedId ? { ...bed, admissionAfterMove } : bed\n    ));\n  };\n\n  const validateRatio = (text) => {\n    if (text === '') return true;\n    // Allow formats like 1:1, 1:2, 1:3, 1:4, etc.\n    const pattern = /^1:[1-9]\\d*$/;\n    return pattern.test(text) || /^[0-9:]*$/.test(text);\n  };\n\n  const validateTimeInput = (text) => {\n    return text === '' || /^[0-9-]*$/.test(text);\n  };\n\n  const calculateAdmissionCapacity = (nurses, currentAssignments) => {\n    const totalNurses = nurses - (includeInCharge ? 1 : 0);\n    if (totalNurses <= 0) return ['No capacity - no bedside nurses available'];\n\n    const currentOccupiedBeds = beds.filter(bed => \n      bed.ratio && parseRatio(bed.ratio) !== null && bed.status !== 'discharge' && bed.status !== 'toWard' && bed.status !== 'bedMove' && bed.status !== 'bedMoveWithRatio'\n    ).length;\n    \n    const plannedDischarges = beds.filter(bed => \n      bed.ratio && parseRatio(bed.ratio) !== null && (bed.status === 'discharge' || bed.status === 'toWard')\n    ).length;\n    \n    const effectiveOccupiedBeds = currentOccupiedBeds;\n    const availableBeds = 11 - effectiveOccupiedBeds;\n    \n    if (availableBeds <= 0) {\n      return ['No capacity - all beds occupied (after planned movements)'];\n    }\n\n    let usedCapacity = 0;\n    const activeAssignments = currentAssignments.map(nurse => ({\n      ...nurse,\n      beds: nurse.beds.filter(bed => {\n        const actualBed = beds.find(b => b.id === bed.id);\n        return actualBed && actualBed.status !== 'discharge' && actualBed.status !== 'toWard' && actualBed.status !== 'bedMove' && actualBed.status !== 'bedMoveWithRatio';\n      }).map(bed => {\n        const actualBed = beds.find(b => b.id === bed.id);\n        if (actualBed && actualBed.status === 'turnover' && actualBed.newRatio) {\n          const newPatientCount = parseRatio(actualBed.newRatio);\n          if (newPatientCount) {\n            return { ...bed, patientCount: newPatientCount };\n          }\n        }\n        return bed;\n      })\n    }));\n\n    activeAssignments.forEach(nurse => {\n      if (nurse.beds && nurse.beds.length > 0) {\n        usedCapacity += nurse.beds.reduce((sum, b) => sum + (1 / b.patientCount), 0);\n      }\n    });\n\n    const remainingCapacity = totalNurses - usedCapacity;\n    \n    if (remainingCapacity < 0.33) {\n      return ['No capacity - all nurses at maximum workload'];\n    }\n\n    const capacityOptions = [];\n    \n    if (remainingCapacity >= 1) {\n      const nursesFor1to1 = Math.floor(remainingCapacity);\n      const actual1to1 = Math.min(nursesFor1to1, availableBeds);\n      if (actual1to1 > 0) {\n        capacityOptions.push(`${actual1to1} × 1:1 patient${actual1to1 > 1 ? 's' : ''}`);\n      }\n    }\n    \n    if (remainingCapacity >= 0.5) {\n      const nursesFor1to2 = Math.floor(remainingCapacity / 0.5);\n      const actual1to2 = Math.min(nursesFor1to2, availableBeds);\n      if (actual1to2 > 0) {\n        capacityOptions.push(`${actual1to2} × 1:2 patient${actual1to2 > 1 ? 's' : ''}`);\n      }\n    }\n    \n    if (remainingCapacity >= 0.33) {\n      const nursesFor1to3 = Math.floor(remainingCapacity / 0.33);\n      const actual1to3 = Math.min(nursesFor1to3, availableBeds);\n      if (actual1to3 > 0) {\n        capacityOptions.push(`${actual1to3} × 1:3 patient${actual1to3 > 1 ? 's' : ''}`);\n      }\n    }\n    \n    // Support for 1:4 and beyond\n    if (remainingCapacity >= 0.25) {\n      const nursesFor1to4 = Math.floor(remainingCapacity / 0.25);\n      const actual1to4 = Math.min(nursesFor1to4, availableBeds);\n      if (actual1to4 > 0) {\n        capacityOptions.push(`${actual1to4} × 1:4 patient${actual1to4 > 1 ? 's' : ''}`);\n      }\n    }\n\n    return capacityOptions.length > 0 ? capacityOptions : ['No capacity - all nurses at maximum workload'];\n  };\n\n  const bedDataString = beds.map(b => `${b.ratio}:${b.status}:${b.newRatio}:${b.moveToBed}:${b.moveNewRatio}:${b.admissionAfterMove}`).join(',');\n  \n  useEffect(() => {\n    calculateNurses();\n  }, [bedDataString, includeInCharge, calculateNurses]);\n\n  const amNurses = parseInt(currentNursesAM) || 0;\n  const totalHours = calculateTotalHours();\n  const pmAdmissionCapacity = calculateAdmissionCapacity(expectedNursesPM, nurseAssignments);\n  const nightAdmissionCapacity = calculateAdmissionCapacity(expectedNursesNight, nurseAssignments);\n  \n  // Current state calculations\n  const currentPatients = beds.filter(bed => \n    bed.ratio && parseRatio(bed.ratio) !== null && (bed.status === 'current' || bed.status === 'toWard')\n  ).length;\n  const toWardPatients = beds.filter(bed => \n    bed.ratio && parseRatio(bed.ratio) !== null && bed.status === 'toWard'\n  ).length;\n  \n  // Expected state calculations\n  const comingInPatients = beds.filter(bed => \n    bed.ratio && parseRatio(bed.ratio) !== null && bed.status === 'comingIn'\n  ).length;\n  const dischargePatients = beds.filter(bed => \n    bed.ratio && parseRatio(bed.ratio) !== null && bed.status === 'discharge'\n  ).length;\n  const turnoverBeds = beds.filter(bed => \n    bed.ratio && parseRatio(bed.ratio) !== null && bed.status === 'turnover'\n  ).length;\n  \n  const totalPatients = beds.filter(bed => bed.ratio && parseRatio(bed.ratio) !== null).length;\n  const remainingAfterWard = currentPatients - toWardPatients;\n  const expectedFinalPatients = remainingAfterWard + comingInPatients + turnoverBeds;\n\n  return (\n    <div className=\"min-h-screen bg-zinc-950 text-zinc-100\">\n      {/* Header */}\n      <div className=\"bg-gradient-to-r from-zinc-900 via-zinc-800 to-zinc-900 border-b border-zinc-800\">\n        <div className=\"max-w-7xl mx-auto px-6 py-8\">\n          <h1 className=\"text-5xl font-black text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-violet-400 text-center tracking-tight\">\n            Nursing Calculator\n          </h1>\n          <p className=\"text-center text-zinc-400 mt-2 text-sm uppercase tracking-wider\">Advanced Shift Planning System</p>\n        </div>\n      </div>\n\n      <div className=\"max-w-7xl mx-auto p-6\">\n        {/* AM Shift Input */}\n        <div className=\"bg-zinc-900 border border-zinc-800 rounded-2xl p-8 mb-6 relative overflow-hidden\">\n          <div className=\"absolute top-0 right-0 w-64 h-64 bg-gradient-to-br from-cyan-500/10 to-transparent rounded-full blur-3xl\"></div>\n          <h2 className=\"text-2xl font-bold mb-6 text-zinc-100 flex items-center relative z-10\">\n            <span className=\"w-3 h-3 bg-cyan-400 rounded-full mr-3 animate-pulse\"></span>\n            Morning Shift\n          </h2>\n          <div className=\"flex items-center gap-6 relative z-10\">\n            <div className=\"bg-zinc-800/50 backdrop-blur border border-zinc-700 p-6 rounded-xl flex-1 max-w-sm\">\n              <label className=\"text-xs text-zinc-400 font-medium block mb-3 uppercase tracking-wider\">AM Nurses (8hr)</label>\n              <input\n                type=\"number\"\n                value={currentNursesAM}\n                onChange={(e) => setCurrentNursesAM(e.target.value)}\n                className=\"w-full bg-zinc-900/50 border border-zinc-700 rounded-lg px-6 py-4 text-3xl font-bold text-cyan-400 focus:border-cyan-500 focus:outline-none focus:ring-2 focus:ring-cyan-500/20 transition-all\"\n                placeholder=\"0\"\n              />\n            </div>\n            {amNurses > 0 && (\n              <div className=\"bg-gradient-to-br from-cyan-500/10 to-violet-500/10 border border-cyan-500/20 p-6 rounded-xl\">\n                <p className=\"text-zinc-400 text-xs uppercase tracking-wider\">Total Hours</p>\n                <p className=\"text-4xl font-black text-cyan-400\">{amNurses * 8}</p>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* View Mode Toggle */}\n        <div className=\"bg-zinc-900 border border-zinc-800 rounded-2xl p-6 mb-6\">\n          <div className=\"flex items-center justify-center gap-4\">\n            <span className=\"text-zinc-400 text-sm font-medium uppercase tracking-wider\">View Mode</span>\n            <div className=\"bg-zinc-800 rounded-full p-1 flex\">\n              <button\n                onClick={() => setViewMode('combined')}\n                className={`px-6 py-2 rounded-full text-sm font-medium transition-all ${\n                  viewMode === 'combined' \n                    ? 'bg-gradient-to-r from-cyan-500 to-violet-500 text-white shadow-lg shadow-cyan-500/25' \n                    : 'text-zinc-400 hover:text-zinc-100'\n                }`}\n              >\n                Combined\n              </button>\n              <button\n                onClick={() => setViewMode('split')}\n                className={`px-6 py-2 rounded-full text-sm font-medium transition-all ${\n                  viewMode === 'split' \n                    ? 'bg-gradient-to-r from-cyan-500 to-violet-500 text-white shadow-lg shadow-violet-500/25' \n                    : 'text-zinc-400 hover:text-zinc-100'\n                }`}\n              >\n                Current → Expected\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Bed Input Section */}\n        <div className=\"bg-zinc-900 border border-zinc-800 rounded-2xl p-8 mb-6 relative overflow-hidden\">\n          <div className=\"absolute bottom-0 left-0 w-96 h-96 bg-gradient-to-tr from-violet-500/10 to-transparent rounded-full blur-3xl\"></div>\n          <h2 className=\"text-2xl font-bold mb-6 text-zinc-100 relative z-10\">\n            {viewMode === 'split' ? 'Bed Status & Changes' : 'PM & Night Planning'}\n          </h2>\n          \n          {viewMode === 'split' && (\n            <div className=\"mb-8 grid md:grid-cols-2 gap-4 relative z-10\">\n              <div className=\"bg-gradient-to-br from-blue-500/10 to-transparent border border-blue-500/20 p-6 rounded-xl\">\n                <h3 className=\"font-bold text-blue-400 mb-2 text-sm uppercase tracking-wider\">Current</h3>\n                <p className=\"text-4xl font-black text-blue-400\">{currentPatients}</p>\n                <p className=\"text-zinc-400 text-sm\">patients now</p>\n                {toWardPatients > 0 && (\n                  <p className=\"text-orange-400 text-sm mt-2\">-{toWardPatients} to ward</p>\n                )}\n              </div>\n              <div className=\"bg-gradient-to-br from-green-500/10 to-transparent border border-green-500/20 p-6 rounded-xl\">\n                <h3 className=\"font-bold text-green-400 mb-2 text-sm uppercase tracking-wider\">Expected</h3>\n                <p className=\"text-4xl font-black text-green-400\">{expectedFinalPatients}</p>\n                <p className=\"text-zinc-400 text-sm\">final count</p>\n                <p className=\"text-violet-400 text-sm mt-2 font-medium\">\n                  {expectedNursesPM} nurses needed\n                </p>\n              </div>\n            </div>\n          )}\n          \n          <div className=\"grid gap-3 md:grid-cols-2 relative z-10\">\n            {beds.map(bed => (\n              <div key={bed.id} className=\"bg-zinc-800/50 backdrop-blur border border-zinc-700 p-4 rounded-xl hover:border-zinc-600 transition-all\">\n                <div className=\"flex flex-col gap-3\">\n                  <div className=\"flex items-center gap-3\">\n                    <span className=\"bg-zinc-900 border border-zinc-700 px-3 py-1.5 rounded-lg font-bold text-zinc-400 text-sm\">\n                      B{bed.id}\n                    </span>\n                    <input\n                      type=\"text\"\n                      className=\"flex-1 bg-zinc-900/50 border border-zinc-700 rounded-lg px-3 py-1.5 text-zinc-100 focus:border-cyan-500 focus:outline-none focus:ring-2 focus:ring-cyan-500/20 transition-all text-sm\"\n                      value={bed.ratio}\n                      onChange={(e) => {\n                        if (validateRatio(e.target.value)) {\n                          updateBedRatio(bed.id, e.target.value);\n                        }\n                      }}\n                      placeholder=\"1:2\"\n                    />\n                    {bed.ratio && (\n                      <select\n                        value={bed.status}\n                        onChange={(e) => updateBedStatus(bed.id, e.target.value)}\n                        className={`bg-zinc-900/50 border rounded-lg px-2 py-1.5 text-xs font-medium transition-all ${\n                          bed.status === 'discharge' ? 'border-red-500/50 text-red-400' :\n                          bed.status === 'turnover' ? 'border-purple-500/50 text-purple-400' :\n                          bed.status === 'toWard' ? 'border-orange-500/50 text-orange-400' :\n                          bed.status === 'comingIn' ? 'border-green-500/50 text-green-400' :\n                          bed.status === 'changeRatio' ? 'border-blue-500/50 text-blue-400' :\n                          bed.status === 'bedMove' ? 'border-indigo-500/50 text-indigo-400' :\n                          bed.status === 'bedMoveWithRatio' ? 'border-pink-500/50 text-pink-400' :\n                          'border-zinc-700 text-zinc-400'\n                        }`}\n                      >\n                        <option value=\"current\">Staying</option>\n                        <option value=\"changeRatio\">Ratio Change</option>\n                        <option value=\"bedMove\">Moving Beds</option>\n                        <option value=\"bedMoveWithRatio\">Move + Ratio</option>\n                        <option value=\"toWard\">To Ward</option>\n                        <option value=\"comingIn\">New Admission</option>\n                        <option value=\"discharge\">Discharge</option>\n                        <option value=\"turnover\">Turnover</option>\n                      </select>\n                    )}\n                    {bed.nurseAssigned && bed.status !== 'toWard' && bed.status !== 'discharge' && bed.status !== 'bedMove' && bed.status !== 'bedMoveWithRatio' && (\n                      <span \n                        className=\"px-3 py-1 rounded-full text-xs font-bold bg-gradient-to-r text-zinc-900\"\n                        style={{ \n                          backgroundImage: `linear-gradient(135deg, hsl(${bed.nurseAssigned * 60}, 70%, 60%), hsl(${bed.nurseAssigned * 60 + 30}, 70%, 50%))`\n                        }}\n                      >\n                        N{bed.nurseAssigned}\n                      </span>\n                    )}\n                  </div>\n                  {bed.status === 'turnover' && (\n                    <div className=\"flex items-center gap-2 ml-12\">\n                      <span className=\"text-xs text-purple-400\">New:</span>\n                      <input\n                        type=\"text\"\n                        className=\"flex-1 bg-zinc-900/50 border border-purple-500/30 rounded-lg px-2 py-1 text-xs text-zinc-100 focus:border-purple-500 focus:outline-none\"\n                        value={bed.newRatio}\n                        onChange={(e) => {\n                          if (validateRatio(e.target.value)) {\n                            updateNewRatio(bed.id, e.target.value);\n                          }\n                        }}\n                        placeholder=\"1:2\"\n                      />\n                    </div>\n                  )}\n                  {bed.status === 'changeRatio' && (\n                    <div className=\"flex items-center gap-2 ml-12\">\n                      <span className=\"text-xs text-blue-400\">New:</span>\n                      <input\n                        type=\"text\"\n                        className=\"flex-1 bg-zinc-900/50 border border-blue-500/30 rounded-lg px-2 py-1 text-xs text-zinc-100 focus:border-blue-500 focus:outline-none\"\n                        value={bed.newRatio}\n                        onChange={(e) => {\n                          if (validateRatio(e.target.value)) {\n                            updateNewRatio(bed.id, e.target.value);\n                          }\n                        }}\n                        placeholder=\"1:1\"\n                      />\n                    </div>\n                  )}\n                  {bed.status === 'bedMove' && (\n                    <div className=\"flex flex-col gap-2 ml-12\">\n                      <div className=\"flex items-center gap-2\">\n                        <span className=\"text-xs text-indigo-400\">To:</span>\n                        <select\n                          value={bed.moveToBed}\n                          onChange={(e) => updateMoveToBed(bed.id, e.target.value)}\n                          className=\"bg-zinc-900/50 border border-indigo-500/30 rounded-lg px-2 py-1 text-xs text-zinc-100\"\n                        >\n                          <option value=\"\">Select...</option>\n                          {Array.from({ length: 11 }, (_, i) => i + 1)\n                            .filter(num => num !== bed.id && !beds.find(b => b.id !== bed.id && b.moveToBed === String(num)))\n                            .map(num => (\n                              <option key={num} value={num}>Bed {num}</option>\n                            ))}\n                        </select>\n                      </div>\n                      <div className=\"flex items-center gap-2\">\n                        <span className=\"text-xs text-indigo-400\">New:</span>\n                        <input\n                          type=\"text\"\n                          className=\"flex-1 bg-zinc-900/50 border border-indigo-500/30 rounded-lg px-2 py-1 text-xs text-zinc-100\"\n                          value={bed.admissionAfterMove}\n                          onChange={(e) => {\n                            if (validateRatio(e.target.value)) {\n                              updateAdmissionAfterMove(bed.id, e.target.value);\n                            }\n                          }}\n                          placeholder=\"Optional\"\n                        />\n                      </div>\n                    </div>\n                  )}\n                  {bed.status === 'bedMoveWithRatio' && (\n                    <div className=\"flex flex-col gap-2 ml-12\">\n                      <div className=\"flex items-center gap-2\">\n                        <span className=\"text-xs text-pink-400\">To:</span>\n                        <select\n                          value={bed.moveToBed}\n                          onChange={(e) => updateMoveToBed(bed.id, e.target.value)}\n                          className=\"bg-zinc-900/50 border border-pink-500/30 rounded-lg px-2 py-1 text-xs text-zinc-100\"\n                        >\n                          <option value=\"\">Select...</option>\n                          {Array.from({ length: 11 }, (_, i) => i + 1)\n                            .filter(num => num !== bed.id && !beds.find(b => b.id !== bed.id && b.moveToBed === String(num)))\n                            .map(num => (\n                              <option key={num} value={num}>Bed {num}</option>\n                            ))}\n                        </select>\n                        <span className=\"text-xs text-pink-400\">@</span>\n                        <input\n                          type=\"text\"\n                          className=\"w-16 bg-zinc-900/50 border border-pink-500/30 rounded-lg px-2 py-1 text-xs text-zinc-100\"\n                          value={bed.moveNewRatio}\n                          onChange={(e) => {\n                            if (validateRatio(e.target.value)) {\n                              updateMoveNewRatio(bed.id, e.target.value);\n                            }\n                          }}\n                          placeholder=\"1:1\"\n                        />\n                      </div>\n                      <div className=\"flex items-center gap-2\">\n                        <span className=\"text-xs text-pink-400\">New:</span>\n                        <input\n                          type=\"text\"\n                          className=\"flex-1 bg-zinc-900/50 border border-pink-500/30 rounded-lg px-2 py-1 text-xs text-zinc-100\"\n                          value={bed.admissionAfterMove}\n                          onChange={(e) => {\n                            if (validateRatio(e.target.value)) {\n                              updateAdmissionAfterMove(bed.id, e.target.value);\n                            }\n                          }}\n                          placeholder=\"Optional\"\n                        />\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n          \n          {/* Bed Occupancy Visual */}\n          <div className=\"mt-6 bg-zinc-800/30 border border-zinc-700 p-4 rounded-xl relative z-10\">\n            <div className=\"flex flex-wrap gap-2 items-center\">\n              <span className=\"text-xs font-bold text-zinc-500 uppercase tracking-wider mr-3\">Status</span>\n              {beds.map(bed => {\n                const isOccupied = bed.ratio && parseRatio(bed.ratio) !== null;\n                const isDischarged = bed.status === 'discharge';\n                const isToWard = bed.status === 'toWard';\n                const isAdmission = bed.status === 'comingIn';\n                const isTurnover = bed.status === 'turnover';\n                const isChangeRatio = bed.status === 'changeRatio';\n                const isBedMove = bed.status === 'bedMove';\n                const isBedMoveWithRatio = bed.status === 'bedMoveWithRatio';\n                \n                return (\n                  <div\n                    key={bed.id}\n                    className={`w-10 h-10 rounded-lg flex items-center justify-center text-xs font-bold transition-all border ${\n                      !isOccupied ? 'bg-zinc-900 border-zinc-700 text-zinc-600' :\n                      isDischarged ? 'bg-red-500/20 border-red-500/50 text-red-400' :\n                      isToWard ? 'bg-orange-500/20 border-orange-500/50 text-orange-400' :\n                      isTurnover ? 'bg-purple-500/20 border-purple-500/50 text-purple-400' :\n                      isAdmission ? 'bg-green-500/20 border-green-500/50 text-green-400' :\n                      isChangeRatio ? 'bg-blue-500/20 border-blue-500/50 text-blue-400' :\n                      isBedMove ? 'bg-indigo-500/20 border-indigo-500/50 text-indigo-400' :\n                      isBedMoveWithRatio ? 'bg-pink-500/20 border-pink-500/50 text-pink-400' :\n                      'bg-cyan-500/20 border-cyan-500/50 text-cyan-400'\n                    }`}\n                    title={\n                      !isOccupied ? `Bed ${bed.id}: Empty` :\n                      `Bed ${bed.id}: ${bed.ratio}${\n                        isDischarged ? ' (Discharge)' :\n                        isToWard ? ' (To Ward)' :\n                        isTurnover ? ` (Turnover → ${bed.newRatio || '?'})` :\n                        isAdmission ? ' (New Admission)' :\n                        isChangeRatio ? ` (${bed.ratio} → ${bed.newRatio || '?'})` :\n                        isBedMove ? ` (→ Bed ${bed.moveToBed || '?'}${bed.admissionAfterMove ? ', +new' : ''})` :\n                        isBedMoveWithRatio ? ` (→ Bed ${bed.moveToBed || '?'} @ ${bed.moveNewRatio || '?'}${bed.admissionAfterMove ? ', +new' : ''})` : ''\n                      }`\n                    }\n                  >\n                    {bed.id}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n\n        {/* Additional Staff Section */}\n        <div className=\"bg-zinc-900 border border-zinc-800 rounded-2xl p-8 mb-6\">\n          <h2 className=\"text-2xl font-bold mb-6 text-zinc-100 flex items-center\">\n            <span className=\"w-3 h-3 bg-violet-400 rounded-full mr-3\"></span>\n            Additional Staff\n          </h2>\n          <div className=\"space-y-3\">\n            <label className=\"flex items-center gap-4 p-4 bg-zinc-800/30 border border-zinc-700 rounded-xl hover:border-zinc-600 transition-all cursor-pointer\">\n              <input\n                type=\"checkbox\"\n                checked={includeInCharge}\n                onChange={(e) => setIncludeInCharge(e.target.checked)}\n                className=\"w-5 h-5 text-cyan-500 bg-zinc-800 border-zinc-600 rounded focus:ring-cyan-500\"\n              />\n              <span className=\"font-medium text-zinc-300\">In-Charge Nurse</span>\n              <span className=\"text-xs text-zinc-500 ml-auto\">+1 nurse PM/Night</span>\n            </label>\n            \n            <label className=\"flex items-center gap-4 p-4 bg-zinc-800/30 border border-zinc-700 rounded-xl hover:border-zinc-600 transition-all cursor-pointer\">\n              <input\n                type=\"checkbox\"\n                checked={includeWardClerk}\n                onChange={(e) => setIncludeWardClerk(e.target.checked)}\n                className=\"w-5 h-5 text-cyan-500 bg-zinc-800 border-zinc-600 rounded focus:ring-cyan-500\"\n              />\n              <span className=\"font-medium text-zinc-300\">Ward Clerk</span>\n              <span className=\"text-xs text-zinc-500 ml-auto\">+7.5 hours</span>\n            </label>\n            \n            <label className=\"flex items-center gap-4 p-4 bg-zinc-800/30 border border-zinc-700 rounded-xl hover:border-zinc-600 transition-all cursor-pointer\">\n              <input\n                type=\"checkbox\"\n                checked={includeAM515}\n                onChange={(e) => setIncludeAM515(e.target.checked)}\n                className=\"w-5 h-5 text-cyan-500 bg-zinc-800 border-zinc-600 rounded focus:ring-cyan-500\"\n              />\n              <span className=\"font-medium text-zinc-300\">AM 515</span>\n              <span className=\"text-xs text-zinc-500 ml-auto\">+8 hours</span>\n            </label>\n            \n            <div className=\"flex items-center gap-4 p-4 bg-zinc-800/30 border border-zinc-700 rounded-xl\">\n              <label className=\"flex items-center gap-4 cursor-pointer\">\n                <input\n                  type=\"checkbox\"\n                  checked={includeCNE}\n                  onChange={(e) => setIncludeCNE(e.target.checked)}\n                  className=\"w-5 h-5 text-cyan-500 bg-zinc-800 border-zinc-600 rounded focus:ring-cyan-500\"\n                />\n                <span className=\"font-medium text-zinc-300\">CNE</span>\n              </label>\n              {includeCNE && (\n                <>\n                  <input\n                    type=\"text\"\n                    value={cneHours}\n                    onChange={(e) => {\n                      if (validateTimeInput(e.target.value)) {\n                        setCneHours(e.target.value);\n                      }\n                    }}\n                    placeholder=\"1100-2100\"\n                    className=\"bg-zinc-900/50 border border-zinc-700 rounded-lg px-3 py-2 text-sm text-zinc-100 focus:border-cyan-500 focus:outline-none ml-auto\"\n                  />\n                  {cneHours && calculateHoursFromRange(cneHours) > 0 && (\n                    <span className=\"text-xs text-zinc-500\">\n                      {calculateHoursFromRange(cneHours).toFixed(1)}h\n                    </span>\n                  )}\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Results Section */}\n        {(amNurses > 0 || expectedNursesPM > 0 || totalPatients > 0) && (\n          <div className=\"bg-zinc-900 border border-zinc-800 rounded-2xl p-8 mb-6 relative overflow-hidden\">\n            <div className=\"absolute top-0 right-0 w-96 h-96 bg-gradient-to-bl from-cyan-500/5 to-transparent rounded-full blur-3xl\"></div>\n            <h2 className=\"text-2xl font-bold mb-6 text-zinc-100 relative z-10\">\n              24-Hour Summary\n            </h2>\n            \n            <div className=\"grid md:grid-cols-3 gap-4 mb-8 relative z-10\">\n              <div className=\"bg-gradient-to-br from-blue-500/10 to-transparent border border-blue-500/20 p-6 rounded-xl\">\n                <h3 className=\"font-bold text-blue-400 mb-3 text-sm uppercase tracking-wider flex items-center\">\n                  <span className=\"w-2 h-2 bg-blue-400 rounded-full mr-2\"></span>\n                  AM Shift\n                </h3>\n                <div className=\"text-4xl font-black text-blue-400\">{amNurses}</div>\n                <div className=\"text-sm text-zinc-400 mt-1\">× 8h = {amNurses * 8}h</div>\n              </div>\n              \n              <div className=\"bg-gradient-to-br from-orange-500/10 to-transparent border border-orange-500/20 p-6 rounded-xl\">\n                <h3 className=\"font-bold text-orange-400 mb-3 text-sm uppercase tracking-wider flex items-center\">\n                  <span className=\"w-2 h-2 bg-orange-400 rounded-full mr-2\"></span>\n                  PM Shift\n                </h3>\n                <div className=\"text-4xl font-black text-orange-400\">{expectedNursesPM}</div>\n                <div className=\"text-sm text-zinc-400 mt-1\">× 8h = {expectedNursesPM * 8}h</div>\n                {includeInCharge && <div className=\"text-xs text-zinc-500 mt-1\">(inc. in-charge)</div>}\n              </div>\n              \n              <div className=\"bg-gradient-to-br from-purple-500/10 to-transparent border border-purple-500/20 p-6 rounded-xl\">\n                <h3 className=\"font-bold text-purple-400 mb-3 text-sm uppercase tracking-wider flex items-center\">\n                  <span className=\"w-2 h-2 bg-purple-400 rounded-full mr-2\"></span>\n                  Night Shift\n                </h3>\n                <div className=\"text-4xl font-black text-purple-400\">{expectedNursesNight}</div>\n                <div className=\"text-sm text-zinc-400 mt-1\">× 10h = {expectedNursesNight * 10}h</div>\n                {includeInCharge && <div className=\"text-xs text-zinc-500 mt-1\">(inc. in-charge)</div>}\n              </div>\n            </div>\n\n            <div className=\"bg-gradient-to-r from-cyan-500/10 to-violet-500/10 border border-cyan-500/20 p-6 rounded-xl relative z-10\">\n              <h3 className=\"font-bold mb-4 text-zinc-100 text-lg\">Total Requirement</h3>\n              <div className=\"flex justify-between items-baseline\">\n                <span className=\"text-zinc-400\">24-hour total:</span>\n                <span className=\"text-5xl font-black bg-gradient-to-r from-cyan-400 to-violet-400 bg-clip-text text-transparent\">\n                  {totalHours.toFixed(1)}h\n                </span>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Nurse Assignments */}\n        {nurseAssignments.length > 0 && (\n          <div className=\"bg-zinc-900 border border-zinc-800 rounded-2xl p-8\">\n            <h2 className=\"text-2xl font-bold mb-6 text-zinc-100\">PM & Night Assignments</h2>\n            \n            <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n              {nurseAssignments.map(nurse => {\n                const workload = nurse.beds.reduce((sum, bed) => sum + (1 / bed.patientCount), 0);\n                return (\n                  <div \n                    key={nurse.id} \n                    className=\"bg-zinc-800/50 backdrop-blur border border-zinc-700 p-5 rounded-xl hover:border-zinc-600 transition-all\"\n                  >\n                    <div className=\"flex justify-between items-center mb-4\">\n                      <h3 className=\"font-bold text-lg text-zinc-100\">Nurse {nurse.id}</h3>\n                      <span className={`px-3 py-1 rounded-full text-xs font-bold ${\n                        workload >= 0.9 ? 'bg-red-500/20 text-red-400 border border-red-500/50' : \n                        workload >= 0.7 ? 'bg-yellow-500/20 text-yellow-400 border border-yellow-500/50' : \n                        'bg-green-500/20 text-green-400 border border-green-500/50'\n                      }`}>\n                        {(workload * 100).toFixed(0)}%\n                      </span>\n                    </div>\n                    <div className=\"space-y-2\">\n                      {nurse.beds.map(bed => {\n                        const actualBed = beds.find(b => b.id === bed.id);\n                        const displayRatio = actualBed?.status === 'turnover' && actualBed.newRatio \n                          ? parseRatio(actualBed.newRatio) \n                          : bed.patientCount;\n                        return (\n                          <p key={bed.id} className=\"text-zinc-400 text-sm flex items-center\">\n                            <span className=\"w-1.5 h-1.5 bg-cyan-400 rounded-full mr-2\"></span>\n                            Bed {bed.id} \n                            <span className=\"text-zinc-500 ml-2\">\n                              1:{displayRatio}\n                              {actualBed?.status === 'turnover' && ' [new]'}\n                              {actualBed?.status === 'comingIn' && ' [adm]'}\n                            </span>\n                          </p>\n                        );\n                      })}\n                    </div>\n                  </div>\n                );\n              })}\n              \n              {includeInCharge && (\n                <div className=\"bg-gradient-to-br from-violet-500/10 to-transparent border border-violet-500/20 p-5 rounded-xl\">\n                  <div className=\"flex justify-between items-center mb-4\">\n                    <h3 className=\"font-bold text-lg text-violet-400\">In-Charge</h3>\n                    <span className=\"px-3 py-1 rounded-full text-xs font-bold bg-violet-500/20 text-violet-400 border border-violet-500/50\">\n                      Lead\n                    </span>\n                  </div>\n                  <div className=\"space-y-2 text-violet-400/80 text-sm\">\n                    <p className=\"flex items-center\">\n                      <span className=\"w-1.5 h-1.5 bg-violet-400 rounded-full mr-2\"></span>\n                      Supervision\n                    </p>\n                    <p className=\"flex items-center\">\n                      <span className=\"w-1.5 h-1.5 bg-violet-400 rounded-full mr-2\"></span>\n                      Coordination\n                    </p>\n                    <p className=\"flex items-center\">\n                      <span className=\"w-1.5 h-1.5 bg-violet-400 rounded-full mr-2\"></span>\n                      Emergency\n                    </p>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default NursingCalculator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}